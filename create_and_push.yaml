---
- name: Convert OpenAPI to Nginx
  hosts: localhost
  vars_files:
#    - web.api.yml
  vars:
    server_name: demo.f5demo.com
    allow_world_readable_tmpfiles: true
    nms_host: "10.1.1.7"
    nms_api_basepath: "/api/platform/v1"
    secure: false
    certName: "dummy_test2_f5demo_com_certs"
  gather_facts: false


  tasks:
    - name: get the certificate details
      uri:
              url: 'https://{{ nms_host }}{{ nms_api_basepath }}/certs'
              user: '{{ nms_user }}'
              password: '{{ nms_password }}'
              method: GET
              force_basic_auth: true
              status_code: 200, 201
              validate_certs: false
              return_content: true
      register: result
    - name: get certificate path
      set_fact:
              certPath: "{{ result.json | json_query(query) }}"
      vars:
              query: "items[? name == '{{ certName }}'].certAssignmentDetails[0].assignedKeyPaths[0].cert"
    - name: get key path
      set_fact:
              keyPath: "{{ result.json | json_query(query) }}"
      vars:
              query: "items[? name == '{{ certName }}'].certAssignmentDetails[0].assignedKeyPaths[0].key"
    - name: Create SSL file
      template:
        src: ../templates/ssl_configuration.j2
        dest: ../_etc_nginx_conf.d_includes_{{ server_name }}-ssl/default.conf
    - name: Create nginx configuration main file
      template:
        src: ../templates/main.j2
        dest: ../instance-group/_etc_nginx_conf.d_{{ server_name }}.conf
    - name: Create locations file
      template:
        src: ../templates/locations.j2
        dest: ../_etc_nginx_conf.d_includes_locations_{{ server_name }}.conf
    - name: Create upstreams file
      template:
        src: ../templates/upstreams.j2
        dest: ../instance-group/_etc_nginx_conf.d_includes_upstreams_{{ server_name }}.conf
    - name: create json config file inputs
      set_fact:
         config_map: '{{ config_map|default({})|combine({item|basename|replace("_","/"): lookup("file", item)|b64encode}) }}'
      with_fileglob:
         - "./*.html"
         - "./*.conf"
    - debug:
         var: config_map
    - name: Create config.json
      template:
         src: ../templates/config.j2
         dest: ../instance-group/config.json
